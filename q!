[1mdiff --git a/.idea/gradle.xml b/.idea/gradle.xml[m
[1mindex 639c779..7b3006b 100644[m
[1m--- a/.idea/gradle.xml[m
[1m+++ b/.idea/gradle.xml[m
[36m@@ -13,6 +13,7 @@[m
             <option value="$PROJECT_DIR$/app" />[m
           </set>[m
         </option>[m
[32m+[m[32m        <option name="resolveExternalAnnotations" value="false" />[m
       </GradleProjectSettings>[m
     </option>[m
   </component>[m
[1mdiff --git a/app/src/main/java/com/project/cem/repository/BudgetRepository.java b/app/src/main/java/com/project/cem/repository/BudgetRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3975c89[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/project/cem/repository/BudgetRepository.java[m
[36m@@ -0,0 +1,141 @@[m
[32m+[m[32mpackage com.project.cem.repository;[m
[32m+[m
[32m+[m[32mimport android.content.ContentValues;[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.database.Cursor;[m
[32m+[m[32mimport android.database.sqlite.SQLiteDatabase;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m
[32m+[m[32mimport androidx.lifecycle.MutableLiveData;[m
[32m+[m
[32m+[m[32mimport com.project.cem.model.Budget;[m
[32m+[m[32mimport com.project.cem.model.ExpenseCategory;[m
[32m+[m[32mimport com.project.cem.utils.SQLiteHelper;[m
[32m+[m[32mimport com.project.cem.utils.UserPreferences;[m
[32m+[m
[32m+[m[32mimport java.text.ParseException;[m
[32m+[m[32mimport java.text.SimpleDateFormat;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.Date;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m[32mimport java.util.Locale;[m
[32m+[m
[32m+[m[32mpublic class BudgetRepository {[m
[32m+[m
[32m+[m[32m    private SQLiteHelper dbHelper;[m
[32m+[m[32m    private Context context;[m
[32m+[m[32m    private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());[m
[32m+[m
[32m+[m[32m    public BudgetRepository(Context context) {[m
[32m+[m[32m        this.context = context;[m
[32m+[m[32m        this.dbHelper = new SQLiteHelper(context);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public long insert(Budget budget) {[m
[32m+[m[32m        SQLiteDatabase db = dbHelper.getWritableDatabase();[m
[32m+[m[32m        ContentValues values = new ContentValues();[m
[32m+[m[32m        values.put("categoryID", budget.getCategoryID());[m
[32m+[m[32m        values.put("amount", budget.getAmount());[m
[32m+[m[32m        values.put("startDate", dateFormat.format(budget.getStartDate()));[m
[32m+[m[32m        values.put("endDate", dateFormat.format(budget.getEndDate()));[m
[32m+[m
[32m+[m[32m        long newRowId = db.insert(SQLiteHelper.TABLE_BUDGET, null, values);[m
[32m+[m[32m        db.close();[m
[32m+[m
[32m+[m[32m        Log.d("BudgetRepository", "Insert result (newRowId): " + newRowId);[m
[32m+[m
[32m+[m[32m        return newRowId;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public MutableLiveData<List<Budget>> getAllBudgets() {[m
[32m+[m[32m        MutableLiveData<List<Budget>> budgetsLiveData = new MutableLiveData<>();[m
[32m+[m[32m        List<Budget> budgetList = new ArrayList<>();[m
[32m+[m[32m        SQLiteDatabase db = dbHelper.getReadableDatabase();[m
[32m+[m
[32m+[m[32m        com.project.cem.model.User user = UserPreferences.getUser(context);[m
[32m+[m[32m        if (user == null) {[m
[32m+[m[32m            budgetsLiveData.setValue(budgetList);[m
[32m+[m[32m            return budgetsLiveData;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        int userId = user.getUserID();[m
[32m+[m[32m        Log.d("BudgetRepository", "getAllBudgets - UserID: " + userId); // ThÃªm log user ID[m
[32m+[m
[32m+[m[32m        Log.d("BudgetRepository", "UserID: " + userId);[m
[32m+[m[32m        String query = "SELECT DISTINCT B.budgetID, B.categoryID, B.amount, B.startDate, B.endDate, EC.categoryName " +[m
[32m+[m[32m                "FROM " + SQLiteHelper.TABLE_BUDGET + " B " +[m
[32m+[m[32m                "INNER JOIN " + SQLiteHelper.TABLE_EXPENSE_CATEGORY + " EC ON B.categoryID = EC.categoryID " +[m
[32m+[m[32m                "INNER JOIN " + SQLiteHelper.TABLE_EXPENSE + " E ON B.categoryID = E.categoryID " +[m
[32m+[m[32m                "WHERE E.userID = ?";[m
[32m+[m[32m        Cursor cursor = db.rawQuery(query, new String[]{String.valueOf(userId)});[m
[32m+[m
[32m+[m[32m        if (cursor != null) {[m
[32m+[m[32m            Log.d("BudgetRepository", "Number of budgets found: " + cursor.getCount());[m
[32m+[m[32m        } else {[m
[32m+[m[32m            Log.d("BudgetRepository", "Cursor is NULL!");[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (cursor != null && cursor.moveToFirst()) {[m
[32m+[m[32m            do {[m
[32m+[m[32m                try {[m
[32m+[m[32m                    int budgetId = cursor.getInt(cursor.getColumnIndexOrThrow("budgetID"));[m
[32m+[m[32m                    int categoryId = cursor.getInt(cursor.getColumnIndexOrThrow("categoryID"));[m
[32m+[m[32m                    double amount = cursor.getDouble(cursor.getColumnIndexOrThrow("amount"));[m
[32m+[m[32m                    String startDateStr = cursor.getString(cursor.getColumnIndexOrThrow("startDate"));[m
[32m+[m[32m                    String endDateStr = cursor.getString(cursor.getColumnIndexOrThrow("endDate"));[m
[32m+[m[32m                    String categoryName = cursor.getString(cursor.getColumnIndexOrThrow("categoryName"));[m
[32m+[m
[32m+[m[32m                    Date startDate = dateFormat.parse(startDateStr);[m
[32m+[m[32m                    Date endDate = dateFormat.parse(endDateStr);[m
[32m+[m
[32m+[m[32m                    Budget budget = new Budget(budgetId, categoryId, amount, startDate, endDate);[m
[32m+[m[32m                    budgetList.add(budget);[m
[32m+[m[32m                } catch (ParseException e) {[m
[32m+[m[32m                    Log.e("BudgetRepository", "Error parsing date", e);[m
[32m+[m[32m                }[m
[32m+[m[32m            } while (cursor.moveToNext());[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (cursor != null) {[m
[32m+[m[32m            cursor.close();[m
[32m+[m[32m        }[m
[32m+[m[32m        db.close();[m
[32m+[m[32m        Log.d("BudgetRepository", "getAllBudgets - Budget list size before setValue: " + budgetList.size());[m
[32m+[m[32m        budgetsLiveData.setValue(budgetList);[m
[32m+[m
[32m+[m[32m        return budgetsLiveData;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int update(Budget budget) {[m
[32m+[m[32m        SQLiteDatabase db = dbHelper.getWritableDatabase();[m
[32m+[m[32m        ContentValues values = new ContentValues();[m
[32m+[m[32m        values.put("categoryID", budget.getCategoryID());[m
[32m+[m[32m        values.put("amount", budget.getAmount());[m
[32m+[m[32m        values.put("startDate", dateFormat.format(budget.getStartDate()));[m
[32m+[m[32m        values.put("endDate", dateFormat.format(budget.getEndDate()));[m
[32m+[m
[32m+[m[32m        String selection = "budgetID = ?";[m
[32m+[m[32m        String[] selectionArgs = {String.valueOf(budget.getBudgetID())};[m
[32m+[m
[32m+[m[32m        int count = db.update(SQLiteHelper.TABLE_BUDGET, values, selection, selectionArgs);[m
[32m+[m[32m        db.close();[m
[32m+[m[32m        return count;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public List<ExpenseCategory> getAllCategories() {[m
[32m+[m[32m        List<ExpenseCategory> categories = new ArrayList<>();[m
[32m+[m[32m        SQLiteDatabase db = dbHelper.getReadableDatabase();[m
[32m+[m[32m        Cursor cursor = db.rawQuery("SELECT * FROM " + SQLiteHelper.TABLE_EXPENSE_CATEGORY, null);[m
[32m+[m
[32m+[m[32m        if (cursor != null && cursor.moveToFirst()) {[m
[32m+[m[32m            do {[m
[32m+[m[32m                int id = cursor.getInt(cursor.getColumnIndexOrThrow("categoryID"));[m
[32m+[m[32m                String name = cursor.getString(cursor.getColumnIndexOrThrow("categoryName"));[m
[32m+[m[32m                categories.add(new ExpenseCategory(id, name));[m
[32m+[m[32m            } while (cursor.moveToNext());[m
[32m+[m[32m            cursor.close();[m
[32m+[m[32m        }[m
[32m+[m[32m        db.close();[m
[32m+[m[32m        return categories;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/project/cem/ui/budget/BudgetFragment.java b/app/src/main/java/com/project/cem/ui/budget/BudgetFragment.java[m
[1mindex 8167a77..683259b 100644[m
[1m--- a/app/src/main/java/com/project/cem/ui/budget/BudgetFragment.java[m
[1m+++ b/app/src/main/java/com/project/cem/ui/budget/BudgetFragment.java[m
[36m@@ -1,66 +1,171 @@[m
 package com.project.cem.ui.budget;[m
 [m
[32m+[m[32mimport android.app.DatePickerDialog;[m
 import android.os.Bundle;[m
 [m
 import androidx.fragment.app.Fragment;[m
[32m+[m[32mimport androidx.lifecycle.ViewModelProvider;[m
[32m+[m[32mimport androidx.recyclerview.widget.LinearLayoutManager;[m
[32m+[m[32mimport androidx.recyclerview.widget.RecyclerView;[m
 [m
[32m+[m[32mimport android.util.Log;[m
 import android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
[32m+[m[32mimport android.widget.ArrayAdapter;[m
[32m+[m[32mimport android.widget.Button;[m
[32m+[m[32mimport android.widget.DatePicker;[m
[32m+[m[32mimport android.widget.EditText;[m
[32m+[m[32mimport android.widget.ProgressBar;[m
[32m+[m[32mimport android.widget.Spinner;[m
[32m+[m[32mimport android.widget.Toast;[m
 [m
 import com.project.cem.R;[m
[32m+[m[32mimport com.project.cem.model.Budget;[m
[32m+[m[32mimport com.project.cem.model.ExpenseCategory;[m
[32m+[m[32mimport com.project.cem.viewmodel.BudgetViewModel;[m
[32m+[m
[32m+[m[32mimport java.text.SimpleDateFormat;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.Calendar;[m
[32m+[m[32mimport java.util.Date;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m[32mimport java.util.Locale;[m
 [m
[31m-/**[m
[31m- * A simple {@link Fragment} subclass.[m
[31m- * Use the {@link BudgetFragment#newInstance} factory method to[m
[31m- * create an instance of this fragment.[m
[31m- */[m
 public class BudgetFragment extends Fragment {[m
 [m
[31m-    // TODO: Rename parameter arguments, choose names that match[m
[31m-    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER[m
[31m-    private static final String ARG_PARAM1 = "param1";[m
[31m-    private static final String ARG_PARAM2 = "param2";[m
[32m+[m[32m    private BudgetViewModel budgetViewModel;[m
[32m+[m[32m    private Spinner spnCategory;[m
[32m+[m[32m    private EditText edtAmount;[m
[32m+[m[32m    private EditText edtStartDate;[m
[32m+[m[32m    private EditText edtEndDate;[m
[32m+[m[32m    private Button btnSave;[m
[32m+[m[32m    private RecyclerView rclViewBudgets;[m
[32m+[m[32m    private ProgressBar progressBar;[m
[32m+[m[32m    private BudgetsAdapter budgetsAdapter;[m
[32m+[m[32m    private List<ExpenseCategory> categoriesList = new ArrayList<>();[m
[32m+[m[32m    private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public View onCreateView(LayoutInflater inflater, ViewGroup container,[m
[32m+[m[32m                             Bundle savedInstanceState) {[m
[32m+[m[32m        View view = inflater.inflate(R.layout.fragment_budget, container, false);[m
[32m+[m
[32m+[m[32m        spnCategory = view.findViewById(R.id.spn_category);[m
[32m+[m[32m        edtAmount = view.findViewById(R.id.edt_amount);[m
[32m+[m[32m        edtStartDate = view.findViewById(R.id.edt_start_date);[m
[32m+[m[32m        edtEndDate = view.findViewById(R.id.edt_end_date);[m
[32m+[m[32m        btnSave = view.findViewById(R.id.btn_save);[m
[32m+[m[32m        rclViewBudgets = view.findViewById(R.id.rcl_view_budgets);[m
[32m+[m[32m        progressBar = view.findViewById(R.id.progress_bar);[m
[32m+[m
[32m+[m
[32m+[m[32m        rclViewBudgets.setLayoutManager(new LinearLayoutManager(getContext()));[m
[32m+[m[32m        budgetsAdapter = new BudgetsAdapter(new ArrayList<>(), budgetViewModel);[m
[32m+[m[32m        rclViewBudgets.setAdapter(budgetsAdapter);[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m        budgetViewModel = new ViewModelProvider(this).get(BudgetViewModel.class);[m
[32m+[m
[32m+[m[32m        budgetViewModel.getAllCategories().observe(getViewLifecycleOwner(), categories -> {[m
[32m+[m[32m            categoriesList.clear();[m
[32m+[m[32m            categoriesList.addAll(categories);[m
[32m+[m[32m            ArrayAdapter<String> adapter = new ArrayAdapter<>(getContext(),[m
[32m+[m[32m                    android.R.layout.simple_spinner_item, getCategoryNames(categories));[m
[32m+[m[32m            adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);[m
[32m+[m[32m            spnCategory.setAdapter(adapter);[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        budgetViewModel.getAllBudgets().observe(getViewLifecycleOwner(), budgets -> {[m
[32m+[m[32m            Log.d("BudgetFragment", "Observer triggered, budget list size: " + (budgets != null ? budgets.size() : "null"));[m
[32m+[m[32m            budgetsAdapter.setBudgets(budgets);[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        edtStartDate.setOnClickListener(v -> showDatePickerDialog(edtStartDate));[m
[32m+[m[32m        edtEndDate.setOnClickListener(v -> showDatePickerDialog(edtEndDate));[m
[32m+[m
[32m+[m[32m        btnSave.setOnClickListener(v -> saveBudget());[m
[32m+[m
[32m+[m[32m        budgetViewModel.getMessageLiveData().observe(getViewLifecycleOwner(), message -> {[m
[32m+[m[32m            if (message != null && !message.isEmpty()) {[m
[32m+[m[32m                Toast.makeText(getContext(), message, Toast.LENGTH_SHORT).show();[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        budgetViewModel.isLoading().observe(getViewLifecycleOwner(), isLoading -> {[m
[32m+[m[32m            if (isLoading) {[m
[32m+[m[32m                progressBar.setVisibility(View.VISIBLE);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                progressBar.setVisibility(View.GONE);[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        budgetViewModel.getErrorMessage().observe(getViewLifecycleOwner(), error -> {[m
[32m+[m[32m            if (error != null && !error.isEmpty()) {[m
[32m+[m[32m                Toast.makeText(getContext(), error, Toast.LENGTH_SHORT).show();[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
 [m
[31m-    // TODO: Rename and change types of parameters[m
[31m-    private String mParam1;[m
[31m-    private String mParam2;[m
 [m
[31m-    public BudgetFragment() {[m
[31m-        // Required empty public constructor[m
[32m+[m[32m        return view;[m
     }[m
 [m
[31m-    /**[m
[31m-     * Use this factory method to create a new instance of[m
[31m-     * this fragment using the provided parameters.[m
[31m-     *[m
[31m-     * @param param1 Parameter 1.[m
[31m-     * @param param2 Parameter 2.[m
[31m-     * @return A new instance of fragment BudgetFragment.[m
[31m-     */[m
[31m-    // TODO: Rename and change types and number of parameters[m
[31m-    public static BudgetFragment newInstance(String param1, String param2) {[m
[31m-        BudgetFragment fragment = new BudgetFragment();[m
[31m-        Bundle args = new Bundle();[m
[31m-        args.putString(ARG_PARAM1, param1);[m
[31m-        args.putString(ARG_PARAM2, param2);[m
[31m-        fragment.setArguments(args);[m
[31m-        return fragment;[m
[32m+[m[32m    private void showDatePickerDialog(final EditText editText) {[m
[32m+[m[32m        final Calendar calendar = Calendar.getInstance();[m
[32m+[m[32m        int year = calendar.get(Calendar.YEAR);[m
[32m+[m[32m        int month = calendar.get(Calendar.MONTH);[m
[32m+[m[32m        int day = calendar.get(Calendar.DAY_OF_MONTH);[m
[32m+[m
[32m+[m[32m        DatePickerDialog datePickerDialog = new DatePickerDialog(getContext(),[m
[32m+[m[32m                (view, year1, monthOfYear, dayOfMonth) -> {[m
[32m+[m[32m                    calendar.set(Calendar.YEAR, year1);[m
[32m+[m[32m                    calendar.set(Calendar.MONTH, monthOfYear);[m
[32m+[m[32m                    calendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);[m
[32m+[m[32m                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());[m
[32m+[m[32m                    editText.setText(sdf.format(calendar.getTime()));[m
[32m+[m
[32m+[m[32m                }, year, month, day);[m
[32m+[m[32m        datePickerDialog.show();[m
     }[m
 [m
[31m-    @Override[m
[31m-    public void onCreate(Bundle savedInstanceState) {[m
[31m-        super.onCreate(savedInstanceState);[m
[31m-        if (getArguments() != null) {[m
[31m-            mParam1 = getArguments().getString(ARG_PARAM1);[m
[31m-            mParam2 = getArguments().getString(ARG_PARAM2);[m
[32m+[m[32m    private void saveBudget() {[m
[32m+[m[32m        String amountStr = edtAmount.getText().toString().trim();[m
[32m+[m[32m        String startDateStr = edtStartDate.getText().toString().trim();[m
[32m+[m[32m        String endDateStr = edtEndDate.getText().toString().trim();[m
[32m+[m
[32m+[m
[32m+[m[32m        if (spnCategory.getSelectedItem() == null || amountStr.isEmpty() || startDateStr.isEmpty() || endDateStr.isEmpty()) {[m
[32m+[m[32m            Toast.makeText(getContext(), "Please fill in all fields", Toast.LENGTH_SHORT).show();[m
[32m+[m[32m            return;[m
         }[m
[31m-    }[m
[32m+[m[32m        int categoryId = categoriesList.get(spnCategory.getSelectedItemPosition()).getCategoryID();[m
 [m
[31m-    @Override[m
[31m-    public View onCreateView(LayoutInflater inflater, ViewGroup container,[m
[31m-                             Bundle savedInstanceState) {[m
[31m-        // Inflate the layout for this fragment[m
[31m-        return inflater.inflate(R.layout.fragment_budget, container, false);[m
[32m+[m[32m        double amount = Double.parseDouble(amountStr);[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            Date startDate = dateFormat.parse(startDateStr);[m
[32m+[m[32m            Date endDate = dateFormat.parse(endDateStr);[m
[32m+[m[32m            Budget newBudget = new Budget();[m
[32m+[m[32m            newBudget.setCategoryID(categoryId);[m
[32m+[m[32m            newBudget.setAmount(amount);[m
[32m+[m[32m            newBudget.setStartDate(startDate);[m
[32m+[m[32m            newBudget.setEndDate(endDate);[m
[32m+[m[32m            budgetViewModel.insert(newBudget);[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m[32m        catch (Exception e){[m
[32m+[m[32m            Toast.makeText(getContext(), "date faild", Toast.LENGTH_SHORT).show();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m    private List<String> getCategoryNames(List<ExpenseCategory> categories) {[m
[32m+[m[32m        List<String> names = new ArrayList<>();[m
[32m+[m[32m        for (ExpenseCategory category : categories) {[m
[32m+[m[32m            names.add(category.getCategoryName());[m
[32m+[m[32m        }[m
[32m+[m[32m        return names;[m
     }[m
[32m+[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/project/cem/ui/budget/BudgetsAdapter.java b/app/src/main/java/com/project/cem/ui/budget/BudgetsAdapter.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4f72a87[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com